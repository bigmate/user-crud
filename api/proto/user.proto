syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "envoyproxy/validate.proto";

package user;

option go_package = "/usermanager";

service UserManager {
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/v1/users",
    };
  }

  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/v1/users",
      body: "*"
    };
  }

  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/v1/users/{id}"
    };
  }

  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      patch: "/v1/users/{id}"
      body: "*"
    };
  }

  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
    option (google.api.http) = {
      delete: "/v1/users/{id}"
    };
  }
}

message ListUsersRequest {
  uint64  page_size = 1;
  uint64  page_number = 2;
  string first_name = 3;
  string last_name = 4;
  string country = 5;
  string email = 6;
}

message ListUsersResponse {
  message User {
    string id = 1;
    string first_name = 2;
    string last_name = 3;
    string nickname = 4;
    string email = 5;
    string country = 6;
    google.protobuf.Timestamp created_at = 7;
    google.protobuf.Timestamp updated_at = 8;
  }

  repeated User users = 1;
  uint64 total_count = 2;
}

message CreateUserRequest {
  string first_name = 1;
  string last_name = 2;
  string nickname = 3;
  string password = 4 [(validate.rules).string = {min_len: 8}];
  string email = 5 [(validate.rules).string = {pattern: "^\\w+@\\w+\\.\\w+$"}];
  string country = 6;
}

message CreateUserResponse {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string nickname = 4;
  string email = 5;
  string country = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

message GetUserRequest {string id = 1 [(validate.rules).string = {pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$"}];}

message GetUserResponse {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string nickname = 4;
  string email = 5;
  string country = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

message UpdateUserRequest {
  string id = 1 [(validate.rules).string = {pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$"}];
  string first_name = 2;
  string last_name = 3;
  string nickname = 4;
  string email = 5 [(validate.rules).string = {ignore_empty: true, pattern: "^\\w+@\\w+\\.\\w+$"}];
  string country = 6;
}

// Return every public user field
message UpdateUserResponse {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string nickname = 4;
  string email = 5;
  string country = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

message DeleteUserRequest {
  string id = 1 [(validate.rules).string = {pattern: "^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$"}];
}

// Empty response message
message DeleteUserResponse {}
